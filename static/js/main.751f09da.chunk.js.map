{"version":3,"sources":["components/card-list/card.component.jsx","components/card-list/card-list.component.jsx","components/card-list/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","src","id","alt","name","CardList","monsters","className","map","Search","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","data","setState","this","FilteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAEaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,gCACE,qBACEC,IAAG,+BAA0BD,EAAQE,GAAlC,mBAA+CF,EAAQE,IAC1DC,IAAI,KAEN,6BAAKH,EAAQI,WCNNC,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKC,UAAU,OAAf,SACGD,EAASE,KAAI,SAACR,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQE,UCLdO,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACpC,OACE,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KC0D9CG,E,kDA1Db,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEhB,SAAUe,S,oBAG9C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZQ,EAAmBlB,EAASmB,QAAO,SAACzB,GAAD,OACvCA,EAAQI,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAKnB,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CACEG,YAAa,cACbC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAQ7D,cAAC,EAAD,CAAUxB,SAAUkB,W,GAhCVO,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.751f09da.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Card = ({ monster }) => {\n  return (\n    <div>\n      <img\n        src={`https://robohash.org/${monster.id}?set=set${monster.id}`}\n        alt=\"\"\n      />\n      <h1>{monster.name}</h1>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./cardList.css\";\nimport { Card } from \"./card.component\";\nexport const CardList = ({ monsters }) => {\n  return (\n    <div className=\"card\">\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Search = ({ placeholder, handleChange }) => {\n  return (\n    <input type=\"search\" placeholder={placeholder} onChange={handleChange} />\n  );\n};\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { Search } from \"./components/card-list/Search\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => this.setState({ monsters: data }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const FilteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Villains</h1>\n        <Search\n          placeholder={\"Search here\"}\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        {/* <input\n          type=\"search\"\n          placeholder=\"Search\"\n          onChange={(e) => this.setState({ searchField: e.target.value })}\n          value={this.state.searchField}\n        /> */}\n        <CardList monsters={FilteredMonsters} />\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}